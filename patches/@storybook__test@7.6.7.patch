diff --git a/dist/index.d.ts b/dist/index.d.ts
index 880b7ec16674fb512a2e21f85256cd0298ce1060..377a2835b153418bd7142846c08655635e80e05d 100644
--- a/dist/index.d.ts
+++ b/dist/index.d.ts
@@ -3,8 +3,7 @@ import * as matchers from '@testing-library/jest-dom/matchers';
 import { MaybeMocked, MaybeMockedDeep, MaybePartiallyMocked, MaybePartiallyMockedDeep } from '@vitest/spy';
 export * from '@vitest/spy';
 export { fn, isMockFunction, spies as mocks, spyOn } from '@vitest/spy';
-import * as _testing_library_user_event_dist_types_setup_directApi from '@testing-library/user-event/dist/types/setup/directApi';
-import * as _testing_library_user_event_dist_types_setup_setup from '@testing-library/user-event/dist/types/setup/setup';
+import _userEvent from '@testing-library/user-event';
 import * as domTestingLibrary from '@testing-library/dom';

 type Promisify<Fn> = Fn extends (...args: infer A) => infer R ? (...args: A) => R extends Promise<any> ? R : Promise<R> : Fn;
@@ -152,26 +151,7 @@ declare const waitFor: typeof domTestingLibrary.waitFor;
 declare const waitForElementToBeRemoved: typeof domTestingLibrary.waitForElementToBeRemoved;
 declare const within: typeof domTestingLibrary.getQueriesForElement;
 declare const prettyFormat: typeof domTestingLibrary.prettyFormat;
-declare const userEvent: {
-    readonly setup: typeof _testing_library_user_event_dist_types_setup_setup.setupMain;
-    readonly clear: typeof _testing_library_user_event_dist_types_setup_directApi.clear;
-    readonly click: typeof _testing_library_user_event_dist_types_setup_directApi.click;
-    readonly copy: typeof _testing_library_user_event_dist_types_setup_directApi.copy;
-    readonly cut: typeof _testing_library_user_event_dist_types_setup_directApi.cut;
-    readonly dblClick: typeof _testing_library_user_event_dist_types_setup_directApi.dblClick;
-    readonly deselectOptions: typeof _testing_library_user_event_dist_types_setup_directApi.deselectOptions;
-    readonly hover: typeof _testing_library_user_event_dist_types_setup_directApi.hover;
-    readonly keyboard: typeof _testing_library_user_event_dist_types_setup_directApi.keyboard;
-    readonly pointer: typeof _testing_library_user_event_dist_types_setup_directApi.pointer;
-    readonly paste: typeof _testing_library_user_event_dist_types_setup_directApi.paste;
-    readonly selectOptions: typeof _testing_library_user_event_dist_types_setup_directApi.selectOptions;
-    readonly tripleClick: typeof _testing_library_user_event_dist_types_setup_directApi.tripleClick;
-    readonly type: typeof _testing_library_user_event_dist_types_setup_directApi.type;
-    readonly unhover: typeof _testing_library_user_event_dist_types_setup_directApi.unhover;
-    readonly upload: typeof _testing_library_user_event_dist_types_setup_directApi.upload;
-    readonly tab: typeof _testing_library_user_event_dist_types_setup_directApi.tab;
-};
-
+declare const userEvent: typeof _userEvent;
 declare const expect: Expect;

 export { buildQueries, clearAllMocks, configure, createEvent, expect, findAllByAltText, findAllByDisplayValue, findAllByLabelText, findAllByPlaceholderText, findAllByRole, findAllByTestId, findAllByText, findAllByTitle, findByAltText, findByDisplayValue, findByLabelText, findByPlaceholderText, findByRole, findByTestId, findByText, findByTitle, fireEvent, getAllByAltText, getAllByDisplayValue, getAllByLabelText, getAllByPlaceholderText, getAllByRole, getAllByTestId, getAllByText, getAllByTitle, getByAltText, getByDisplayValue, getByLabelText, getByPlaceholderText, getByRole, getByTestId, getByText, getByTitle, getConfig, getDefaultNormalizer, getElementError, getNodeText, getQueriesForElement, getRoles, getSuggestedQuery, isInaccessible, logDOM, logRoles, mocked, prettyDOM, prettyFormat, queries, queryAllByAltText, queryAllByAttribute, queryAllByDisplayValue, queryAllByLabelText, queryAllByPlaceholderText, queryAllByRole, queryAllByTestId, queryAllByText, queryAllByTitle, queryByAltText, queryByAttribute, queryByDisplayValue, queryByLabelText, queryByPlaceholderText, queryByRole, queryByTestId, queryByText, queryByTitle, queryHelpers, resetAllMocks, restoreAllMocks, screen, userEvent, waitFor, waitForElementToBeRemoved, within };
